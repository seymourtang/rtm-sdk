/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./internal/rtmlib/lib.i

#ifndef SWIG_rtmlib_WRAP_H_
#define SWIG_rtmlib_WRAP_H_

class Swig_memory;

class SwigDirector_IWrappedIChannelEventHandler : public agora::rtm::IWrappedIChannelEventHandler
{
 public:
  SwigDirector_IWrappedIChannelEventHandler(int swig_p);
  virtual ~SwigDirector_IWrappedIChannelEventHandler();
  void _swig_upcall_onJoinSuccess() {
    agora::rtm::IChannelEventHandler::onJoinSuccess();
  }
  virtual void onJoinSuccess();
  void _swig_upcall_onJoinFailure(agora::rtm::JOIN_CHANNEL_ERR errorCode) {
    agora::rtm::IChannelEventHandler::onJoinFailure(errorCode);
  }
  virtual void onJoinFailure(agora::rtm::JOIN_CHANNEL_ERR errorCode);
  void _swig_upcall_onLeave(agora::rtm::LEAVE_CHANNEL_ERR errorCode) {
    agora::rtm::IChannelEventHandler::onLeave(errorCode);
  }
  virtual void onLeave(agora::rtm::LEAVE_CHANNEL_ERR errorCode);
  void _swig_upcall_onMessageReceived(char const *userId, agora::rtm::IMessage const *message) {
    agora::rtm::IChannelEventHandler::onMessageReceived(userId,message);
  }
  virtual void onMessageReceived(char const *userId, agora::rtm::IMessage const *message);
  void _swig_upcall_onImageMessageReceived(char const *userId, agora::rtm::IImageMessage const *message) {
    agora::rtm::IChannelEventHandler::onImageMessageReceived(userId,message);
  }
  virtual void onImageMessageReceived(char const *userId, agora::rtm::IImageMessage const *message);
  void _swig_upcall_onFileMessageReceived(char const *userId, agora::rtm::IFileMessage const *message) {
    agora::rtm::IChannelEventHandler::onFileMessageReceived(userId,message);
  }
  virtual void onFileMessageReceived(char const *userId, agora::rtm::IFileMessage const *message);
  void _swig_upcall_onSendMessageResult(long long messageId, agora::rtm::CHANNEL_MESSAGE_ERR_CODE state) {
    agora::rtm::IChannelEventHandler::onSendMessageResult(messageId,state);
  }
  virtual void onSendMessageResult(long long messageId, agora::rtm::CHANNEL_MESSAGE_ERR_CODE state);
  void _swig_upcall_onMemberJoined(agora::rtm::IChannelMember *member) {
    agora::rtm::IChannelEventHandler::onMemberJoined(member);
  }
  virtual void onMemberJoined(agora::rtm::IChannelMember *member);
  void _swig_upcall_onMemberLeft(agora::rtm::IChannelMember *member) {
    agora::rtm::IChannelEventHandler::onMemberLeft(member);
  }
  virtual void onMemberLeft(agora::rtm::IChannelMember *member);
  void _swig_upcall_onGetMembers(agora::rtm::IChannelMember **members, int userCount, agora::rtm::GET_MEMBERS_ERR errorCode) {
    agora::rtm::IWrappedIChannelEventHandler::onGetMembers(members,userCount,errorCode);
  }
  virtual void onGetMembers(agora::rtm::IChannelMember **members, int userCount, agora::rtm::GET_MEMBERS_ERR errorCode);
  void _swig_upcall_onAttributesUpdated(agora::rtm::IRtmChannelAttribute const *attributes[], int numberOfAttributes) {
    agora::rtm::IChannelEventHandler::onAttributesUpdated(attributes,numberOfAttributes);
  }
  virtual void onAttributesUpdated(agora::rtm::IRtmChannelAttribute const *attributes[], int numberOfAttributes);
  void _swig_upcall_onMemberCountUpdated(int memberCount) {
    agora::rtm::IChannelEventHandler::onMemberCountUpdated(memberCount);
  }
  virtual void onMemberCountUpdated(int memberCount);
  virtual void onWrappedGetMembers(agora::rtm::IChannelMember *member, int count, agora::rtm::GET_MEMBERS_ERR errorCode);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_IRtmServiceEventHandler : public agora::rtm::IRtmServiceEventHandler
{
 public:
  SwigDirector_IRtmServiceEventHandler(int swig_p);
  virtual ~SwigDirector_IRtmServiceEventHandler();
  void _swig_upcall_onLoginSuccess() {
    agora::rtm::IRtmServiceEventHandler::onLoginSuccess();
  }
  virtual void onLoginSuccess();
  void _swig_upcall_onLoginFailure(agora::rtm::LOGIN_ERR_CODE errorCode) {
    agora::rtm::IRtmServiceEventHandler::onLoginFailure(errorCode);
  }
  virtual void onLoginFailure(agora::rtm::LOGIN_ERR_CODE errorCode);
  void _swig_upcall_onRenewTokenResult(char const *token, agora::rtm::RENEW_TOKEN_ERR_CODE errorCode) {
    agora::rtm::IRtmServiceEventHandler::onRenewTokenResult(token,errorCode);
  }
  virtual void onRenewTokenResult(char const *token, agora::rtm::RENEW_TOKEN_ERR_CODE errorCode);
  void _swig_upcall_onTokenExpired() {
    agora::rtm::IRtmServiceEventHandler::onTokenExpired();
  }
  virtual void onTokenExpired();
  void _swig_upcall_onLogout(agora::rtm::LOGOUT_ERR_CODE errorCode) {
    agora::rtm::IRtmServiceEventHandler::onLogout(errorCode);
  }
  virtual void onLogout(agora::rtm::LOGOUT_ERR_CODE errorCode);
  void _swig_upcall_onConnectionStateChanged(agora::rtm::CONNECTION_STATE state, agora::rtm::CONNECTION_CHANGE_REASON reason) {
    agora::rtm::IRtmServiceEventHandler::onConnectionStateChanged(state,reason);
  }
  virtual void onConnectionStateChanged(agora::rtm::CONNECTION_STATE state, agora::rtm::CONNECTION_CHANGE_REASON reason);
  void _swig_upcall_onSendMessageResult(long long messageId, agora::rtm::PEER_MESSAGE_ERR_CODE errorCode) {
    agora::rtm::IRtmServiceEventHandler::onSendMessageResult(messageId,errorCode);
  }
  virtual void onSendMessageResult(long long messageId, agora::rtm::PEER_MESSAGE_ERR_CODE errorCode);
  void _swig_upcall_onMessageReceivedFromPeer(char const *peerId, agora::rtm::IMessage const *message) {
    agora::rtm::IRtmServiceEventHandler::onMessageReceivedFromPeer(peerId,message);
  }
  virtual void onMessageReceivedFromPeer(char const *peerId, agora::rtm::IMessage const *message);
  void _swig_upcall_onImageMessageReceivedFromPeer(char const *peerId, agora::rtm::IImageMessage const *message) {
    agora::rtm::IRtmServiceEventHandler::onImageMessageReceivedFromPeer(peerId,message);
  }
  virtual void onImageMessageReceivedFromPeer(char const *peerId, agora::rtm::IImageMessage const *message);
  void _swig_upcall_onFileMessageReceivedFromPeer(char const *peerId, agora::rtm::IFileMessage const *message) {
    agora::rtm::IRtmServiceEventHandler::onFileMessageReceivedFromPeer(peerId,message);
  }
  virtual void onFileMessageReceivedFromPeer(char const *peerId, agora::rtm::IFileMessage const *message);
  void _swig_upcall_onMediaUploadingProgress(long long requestId, agora::rtm::MediaOperationProgress const &progress) {
    agora::rtm::IRtmServiceEventHandler::onMediaUploadingProgress(requestId,progress);
  }
  virtual void onMediaUploadingProgress(long long requestId, agora::rtm::MediaOperationProgress const &progress);
  void _swig_upcall_onMediaDownloadingProgress(long long requestId, agora::rtm::MediaOperationProgress const &progress) {
    agora::rtm::IRtmServiceEventHandler::onMediaDownloadingProgress(requestId,progress);
  }
  virtual void onMediaDownloadingProgress(long long requestId, agora::rtm::MediaOperationProgress const &progress);
  void _swig_upcall_onFileMediaUploadResult(long long requestId, agora::rtm::IFileMessage *fileMessage, agora::rtm::UPLOAD_MEDIA_ERR_CODE code) {
    agora::rtm::IRtmServiceEventHandler::onFileMediaUploadResult(requestId,fileMessage,code);
  }
  virtual void onFileMediaUploadResult(long long requestId, agora::rtm::IFileMessage *fileMessage, agora::rtm::UPLOAD_MEDIA_ERR_CODE code);
  void _swig_upcall_onImageMediaUploadResult(long long requestId, agora::rtm::IImageMessage *imageMessage, agora::rtm::UPLOAD_MEDIA_ERR_CODE code) {
    agora::rtm::IRtmServiceEventHandler::onImageMediaUploadResult(requestId,imageMessage,code);
  }
  virtual void onImageMediaUploadResult(long long requestId, agora::rtm::IImageMessage *imageMessage, agora::rtm::UPLOAD_MEDIA_ERR_CODE code);
  void _swig_upcall_onMediaDownloadToFileResult(long long requestId, agora::rtm::DOWNLOAD_MEDIA_ERR_CODE code) {
    agora::rtm::IRtmServiceEventHandler::onMediaDownloadToFileResult(requestId,code);
  }
  virtual void onMediaDownloadToFileResult(long long requestId, agora::rtm::DOWNLOAD_MEDIA_ERR_CODE code);
  void _swig_upcall_onMediaDownloadToMemoryResult(long long requestId, char const *memory, long long length, agora::rtm::DOWNLOAD_MEDIA_ERR_CODE code) {
    agora::rtm::IRtmServiceEventHandler::onMediaDownloadToMemoryResult(requestId,memory,length,code);
  }
  virtual void onMediaDownloadToMemoryResult(long long requestId, char const *memory, long long length, agora::rtm::DOWNLOAD_MEDIA_ERR_CODE code);
  void _swig_upcall_onMediaCancelResult(long long requestId, agora::rtm::CANCEL_MEDIA_ERR_CODE code) {
    agora::rtm::IRtmServiceEventHandler::onMediaCancelResult(requestId,code);
  }
  virtual void onMediaCancelResult(long long requestId, agora::rtm::CANCEL_MEDIA_ERR_CODE code);
  void _swig_upcall_onQueryPeersOnlineStatusResult(long long requestId, agora::rtm::PeerOnlineStatus const *peersStatus, int peerCount, agora::rtm::QUERY_PEERS_ONLINE_STATUS_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onQueryPeersOnlineStatusResult(requestId,peersStatus,peerCount,errorCode);
  }
  virtual void onQueryPeersOnlineStatusResult(long long requestId, agora::rtm::PeerOnlineStatus const *peersStatus, int peerCount, agora::rtm::QUERY_PEERS_ONLINE_STATUS_ERR errorCode);
  void _swig_upcall_onSubscriptionRequestResult(long long requestId, agora::rtm::PEER_SUBSCRIPTION_STATUS_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onSubscriptionRequestResult(requestId,errorCode);
  }
  virtual void onSubscriptionRequestResult(long long requestId, agora::rtm::PEER_SUBSCRIPTION_STATUS_ERR errorCode);
  void _swig_upcall_onQueryPeersBySubscriptionOptionResult(long long requestId, char const *peerIds[], int peerCount, agora::rtm::QUERY_PEERS_BY_SUBSCRIPTION_OPTION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onQueryPeersBySubscriptionOptionResult(requestId,peerIds,peerCount,errorCode);
  }
  virtual void onQueryPeersBySubscriptionOptionResult(long long requestId, char const *peerIds[], int peerCount, agora::rtm::QUERY_PEERS_BY_SUBSCRIPTION_OPTION_ERR errorCode);
  void _swig_upcall_onPeersOnlineStatusChanged(agora::rtm::PeerOnlineStatus const peersStatus[], int peerCount) {
    agora::rtm::IRtmServiceEventHandler::onPeersOnlineStatusChanged(peersStatus,peerCount);
  }
  virtual void onPeersOnlineStatusChanged(agora::rtm::PeerOnlineStatus const peersStatus[], int peerCount);
  void _swig_upcall_onSetLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onSetLocalUserAttributesResult(requestId,errorCode);
  }
  virtual void onSetLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onAddOrUpdateLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onAddOrUpdateLocalUserAttributesResult(requestId,errorCode);
  }
  virtual void onAddOrUpdateLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onDeleteLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onDeleteLocalUserAttributesResult(requestId,errorCode);
  }
  virtual void onDeleteLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onClearLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onClearLocalUserAttributesResult(requestId,errorCode);
  }
  virtual void onClearLocalUserAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onGetUserAttributesResult(long long requestId, char const *userId, agora::rtm::RtmAttribute const *attributes, int numberOfAttributes, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onGetUserAttributesResult(requestId,userId,attributes,numberOfAttributes,errorCode);
  }
  virtual void onGetUserAttributesResult(long long requestId, char const *userId, agora::rtm::RtmAttribute const *attributes, int numberOfAttributes, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onSetChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onSetChannelAttributesResult(requestId,errorCode);
  }
  virtual void onSetChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onAddOrUpdateChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onAddOrUpdateChannelAttributesResult(requestId,errorCode);
  }
  virtual void onAddOrUpdateChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onDeleteChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onDeleteChannelAttributesResult(requestId,errorCode);
  }
  virtual void onDeleteChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onClearChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onClearChannelAttributesResult(requestId,errorCode);
  }
  virtual void onClearChannelAttributesResult(long long requestId, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onGetChannelAttributesResult(long long requestId, agora::rtm::IRtmChannelAttribute const *attributes[], int numberOfAttributes, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode) {
    agora::rtm::IRtmServiceEventHandler::onGetChannelAttributesResult(requestId,attributes,numberOfAttributes,errorCode);
  }
  virtual void onGetChannelAttributesResult(long long requestId, agora::rtm::IRtmChannelAttribute const *attributes[], int numberOfAttributes, agora::rtm::ATTRIBUTE_OPERATION_ERR errorCode);
  void _swig_upcall_onGetChannelMemberCountResult(long long requestId, agora::rtm::ChannelMemberCount const *channelMemberCounts, int channelCount, agora::rtm::GET_CHANNEL_MEMBER_COUNT_ERR_CODE errorCode) {
    agora::rtm::IRtmServiceEventHandler::onGetChannelMemberCountResult(requestId,channelMemberCounts,channelCount,errorCode);
  }
  virtual void onGetChannelMemberCountResult(long long requestId, agora::rtm::ChannelMemberCount const *channelMemberCounts, int channelCount, agora::rtm::GET_CHANNEL_MEMBER_COUNT_ERR_CODE errorCode);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
